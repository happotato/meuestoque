// <auto-generated />
using System;
using MeuEstoque.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MeuEstoque.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("MeuEstoque.Domain.SharedKernel.Entity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Entity");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Entity");
                });

            modelBuilder.Entity("MeuEstoque.Domain.AggregatesModel.OrderAggregate.Order", b =>
                {
                    b.HasBaseType("MeuEstoque.Domain.SharedKernel.Entity");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Order_OwnerId");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT")
                        .HasColumnName("Order_Price");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Quantity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Order_Quantity");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ProductId");

                    b.HasDiscriminator().HasValue("Order");
                });

            modelBuilder.Entity("MeuEstoque.Domain.AggregatesModel.ProductAggregate.Product", b =>
                {
                    b.HasBaseType("MeuEstoque.Domain.SharedKernel.Entity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Product_Name");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<long>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasIndex("OwnerId");

                    b.HasDiscriminator().HasValue("Product");
                });

            modelBuilder.Entity("MeuEstoque.Domain.AggregatesModel.UserAggregate.User", b =>
                {
                    b.HasBaseType("MeuEstoque.Domain.SharedKernel.Entity");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("MeuEstoque.Domain.AggregatesModel.OrderAggregate.Order", b =>
                {
                    b.HasOne("MeuEstoque.Domain.AggregatesModel.UserAggregate.User", "Owner")
                        .WithMany("Orders")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeuEstoque.Domain.AggregatesModel.ProductAggregate.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MeuEstoque.Domain.AggregatesModel.ProductAggregate.Product", b =>
                {
                    b.HasOne("MeuEstoque.Domain.AggregatesModel.UserAggregate.User", "Owner")
                        .WithMany("Products")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MeuEstoque.Domain.AggregatesModel.ProductAggregate.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MeuEstoque.Domain.AggregatesModel.UserAggregate.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
